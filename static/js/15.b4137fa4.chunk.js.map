{"version":3,"sources":["components/Checkout/CheckoutOrderDetail.jsx"],"names":["StyledFlex","styled","Flex","_templateObject","props","theme","colors","greenWhite","orange","StyledButton","Button","_templateObject2","green","PaymentColor","Text","_templateObject3","CheckoutOrderDetail","_ref","match","_useContext","useContext","SharedContext","orderDetail","setOrderDetail","confirmPayment","useEffect","getOrederDetail","axios","get","concat","process","params","id","then","response","data","console","log","time","Date","order","create_at","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","rebass__WEBPACK_IMPORTED_MODULE_5__","my","justifyContent","alignItems","flexDirection","width","bg","pl","toLocaleString","is_paid","total","user","name","email","tel","address","message","onClick","disabled","fontSize","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","to"],"mappings":"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","file":"static/js/15.b4137fa4.chunk.js","sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Button, Card, Flex, Heading, Text } from 'rebass';\r\nimport { SharedContext } from '../../contexts/SharedContext';\r\n\r\nconst CheckoutOrderDetail = ({ match }) => {\r\n  const { orderDetail, setOrderDetail, confirmPayment } = useContext(\r\n    SharedContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    getOrederDetail();\r\n  }, []);\r\n\r\n  const getOrederDetail = () => {\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API}/api/${\r\n          process.env.REACT_APP_CUSTOM\r\n        }/order/${match.params.id}`\r\n      )\r\n      .then(response => {\r\n        setOrderDetail(response.data);\r\n        console.log('getOrederDetail ', response.data);\r\n      });\r\n  };\r\n  const time = new Date(orderDetail.order.create_at * 1000);\r\n\r\n  return (\r\n    <Box my={3}>\r\n      <Flex justifyContent='center' alignItems='center' flexDirection='column'>\r\n        <Card width={['95vw', '390px']}>\r\n          <Heading bg='greenWhite' my={1}>\r\n            <Flex justifyContent='center'>Order</Flex>\r\n          </Heading>\r\n\r\n          <StyledFlex flexDirection='column'>\r\n            <div>\r\n              <Text width='100px' pl={2}>\r\n                Create at\r\n              </Text>\r\n              <Text>{time.toLocaleString()}</Text>\r\n            </div>\r\n            <div>\r\n              <Text width='100px' pl={2}>\r\n                Status\r\n              </Text>\r\n              <PaymentColor>\r\n                {orderDetail.order.is_paid === true ? 'paid' : 'need to pay'}\r\n              </PaymentColor>\r\n            </div>\r\n            <div>\r\n              <Text width='100px' pl={2}>\r\n                Total\r\n              </Text>\r\n              <Text>{`kr ${orderDetail.order.total}`}</Text>\r\n            </div>\r\n          </StyledFlex>\r\n\r\n          <Heading bg='greenWhite' my={1}>\r\n            <Flex justifyContent='center'>Recipient</Flex>\r\n          </Heading>\r\n          <StyledFlex flexDirection='column'>\r\n            <div>\r\n              <Text width='100px' pl={2}>\r\n                Name\r\n              </Text>\r\n              <Text>{orderDetail.order.user.name}</Text>\r\n            </div>\r\n            <div>\r\n              <Text width='100px' pl={2}>\r\n                Email\r\n              </Text>\r\n              <Text>{orderDetail.order.user.email}</Text>\r\n            </div>\r\n            <div>\r\n              <Text width='100px' pl={2}>\r\n                Tel\r\n              </Text>\r\n              <Text>{orderDetail.order.user.tel}</Text>\r\n            </div>\r\n            <div>\r\n              <Text width='100px' pl={2}>\r\n                Address\r\n              </Text>\r\n              <Text>{orderDetail.order.user.address}</Text>\r\n            </div>\r\n            <div>\r\n              <Text width='100px' pl={2}>\r\n                Message\r\n              </Text>\r\n              <Text>{orderDetail.order.message}</Text>\r\n            </div>\r\n          </StyledFlex>\r\n        </Card>\r\n        <StyledButton\r\n          onClick={() => {\r\n            confirmPayment(orderDetail.order.id);\r\n            getOrederDetail();\r\n          }}\r\n          disabled={orderDetail.order.is_paid === true}\r\n          width={['97vw', '390px']}\r\n          bg='green'\r\n          fontSize='26px'\r\n        >\r\n          {orderDetail.order.is_paid === true\r\n            ? 'Payment Completed'\r\n            : 'Confirm Payment'}\r\n        </StyledButton>\r\n        {orderDetail.order.is_paid && (\r\n          <Link to='/Sweet-for-happiness/'>\r\n            <StyledButton\r\n              width={['97vw', '390px']}\r\n              bg='green'\r\n              fontSize='26px'\r\n              my={5}\r\n            >\r\n              Back to Main Page\r\n            </StyledButton>\r\n          </Link>\r\n        )}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\nCheckoutOrderDetail.propTypes = {\r\n  match: PropTypes.oneOfType([PropTypes.object]).isRequired,\r\n};\r\n\r\nconst StyledFlex = styled(Flex)`\r\n  div {\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    border-bottom: 1px solid ${props => props.theme.colors.greenWhite};\r\n    background-color: ${props => props.theme.colors.orange};\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 60px;\r\n  &:hover {\r\n    box-shadow: 0 2px 2px 2px rgba(0, 0, 0, 0.2);\r\n    background-color: ${props => props.theme.colors.greenWhite};\r\n    color: ${props => props.theme.colors.green};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst PaymentColor = styled(Text)`\r\n  color: green;\r\n`;\r\n\r\nexport default CheckoutOrderDetail;\r\n"],"sourceRoot":""}