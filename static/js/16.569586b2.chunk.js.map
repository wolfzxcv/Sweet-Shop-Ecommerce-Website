{"version":3,"sources":["components/Product/ProductDetail.jsx"],"names":["AmountButton","styled","Button","_templateObject","props","theme","colors","green","StyledButton","_templateObject2","greenWhite","StyledProductDetail","_ref","className","match","_useContext","useContext","SharedContext","product","setProduct","amount","setAmount","isLaptop","addToCart","useEffect","fetchProductDetail","axios","get","concat","process","params","id","then","response","data","qty","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","rebass__WEBPACK_IMPORTED_MODULE_4__","width","flexDirection","mx","pt","justifyContent","title","src","imageUrl","bg","onClick","disabled","unit","color","fontSize","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_5__","icon","faShoppingCart","px","price","mr","description","alignItems","pr","content","_templateObject3","displayName"],"mappings":"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","file":"static/js/16.569586b2.chunk.js","sourcesContent":["import React, { useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Button, Card, Heading, Flex, Image, Text } from 'rebass';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\nimport { SharedContext } from '../../contexts/SharedContext';\r\n\r\nconst ProductDetail = ({ className, match }) => {\r\n  const {\r\n    product,\r\n    setProduct,\r\n    amount,\r\n    setAmount,\r\n    isLaptop,\r\n    addToCart,\r\n  } = useContext(SharedContext);\r\n\r\n  useEffect(() => {\r\n    fetchProductDetail();\r\n  }, []);\r\n\r\n  const fetchProductDetail = () => {\r\n    axios\r\n      .get(\r\n        `${process.env.REACT_APP_API}/api/${\r\n          process.env.REACT_APP_CUSTOM\r\n        }/product/${match.params.id}`\r\n      )\r\n      .then(response => setProduct(response.data.product));\r\n  };\r\n\r\n  let qty = amount;\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Flex width={['97vw', '90%']} flexDirection={['column', 'row']} mx='auto'>\r\n        <Card pt={['20px', '']}>\r\n          <Flex justifyContent='center'>\r\n            {!isLaptop && <Heading>{product.title}</Heading>}\r\n          </Flex>\r\n          <Image src={product.imageUrl} />\r\n\r\n          <Flex justifyContent='center'>\r\n            <AmountButton\r\n              bg='white'\r\n              onClick={() => setAmount(amount - 1)}\r\n              disabled={amount === 1}\r\n            >\r\n              -\r\n            </AmountButton>\r\n            <AmountButton bg='greenWhite'>{amount}</AmountButton>\r\n            <AmountButton\r\n              bg='white'\r\n              onClick={() => setAmount(amount + 1)}\r\n              disabled={amount >= product.unit}\r\n            >\r\n              +\r\n            </AmountButton>\r\n          </Flex>\r\n\r\n          <StyledButton\r\n            onClick={() => addToCart(match.params.id, qty)}\r\n            width={['97vw', '300px']}\r\n            bg='white'\r\n            color='green'\r\n            id={match.params.id}\r\n            fontSize='26px'\r\n          >\r\n            <FontAwesomeIcon icon={faShoppingCart} />\r\n            {`  Add to cart`}\r\n          </StyledButton>\r\n        </Card>\r\n        <Box px={3} pt={['25px', '']} fontSize='20px'>\r\n          <Flex flexDirection='column' justifyContent='space-between'>\r\n            {isLaptop && <Heading>{product.title}</Heading>}\r\n            <Flex justifyContent={['space-between', 'flex-end']}>\r\n              {!isLaptop && <Text>{`${product.unit} available`}</Text>}\r\n              <Heading>{`kr ${product.price}`}</Heading>\r\n            </Flex>\r\n\r\n            <br />\r\n\r\n            <Flex justifyContent='space-between'>\r\n              <Box>\r\n                <Flex>\r\n                  <Text mr={3}>Allergens</Text>\r\n                  <Box width={['', '350px']}>\r\n                    <Text bg='greenWhite'>{product.description}</Text>\r\n                  </Box>\r\n                </Flex>\r\n              </Box>\r\n              {isLaptop && <Text>{`${product.unit} available`}</Text>}\r\n            </Flex>\r\n\r\n            {isLaptop && <br />}\r\n            {isLaptop && <br />}\r\n            <br />\r\n\r\n            <Flex justifyContent='flex-end'>\r\n              <Flex alignItems='center'>\r\n                <Text pr={3}>Detail</Text>\r\n              </Flex>\r\n              <Text px={2} bg='greenWhite'>\r\n                {product.content}\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n\r\nProductDetail.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  match: PropTypes.oneOfType([PropTypes.object]).isRequired,\r\n};\r\n\r\nconst AmountButton = styled(Button)`\r\n  margin-bottom: 10px;\r\n  height: 50px;\r\n  width: 50px;\r\n  color: ${props => props.theme.colors.green};\r\n  border: 1px solid ${props => props.theme.colors.green};\r\n  font-size: 26px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 60px;\r\n  transition: 0.3s all;\r\n  font-family: 'Shadows Into Light', cursive;\r\n  letter-spacing: 3px;\r\n  border: 1px solid ${props => props.theme.colors.green};\r\n  &:hover {\r\n    box-shadow: 0 1px 1px 1px rgba(0, 0, 0, 0.2);\r\n    background-color: ${props => props.theme.colors.greenWhite};\r\n    color: ${props => props.theme.colors.green};\r\n    cursor: pointer;\r\n  }\r\n  @media (min-width: 769px) {\r\n    &:hover {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledProductDetail = styled(ProductDetail)`\r\n  margin: 10px auto 0 auto;\r\n\r\n  @media (min-width: 769px) {\r\n    width: 1024px;\r\n    height: 500px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    height: 1100px;\r\n  }\r\n`;\r\n\r\nStyledProductDetail.displayName = 'ProductDetail';\r\n\r\nexport default StyledProductDetail;\r\n"],"sourceRoot":""}