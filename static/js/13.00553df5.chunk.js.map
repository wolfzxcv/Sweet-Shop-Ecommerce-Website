{"version":3,"sources":["components/Cart/CartList.jsx","components/Cart/Cart.jsx"],"names":["StyledCartList","styled","_ref","className","id","title","image","price","qty","total","deleteCartOrder","useContext","SharedContext","react_default","a","createElement","src","alt","concat","dist","flexDirection","alignItems","justifyContent","onClick","onKeyDown","role","tabIndex","index_es","icon","faTrash","_templateObject","props","theme","colors","greenWhite","displayName","StyledCart","_useContext","totalPrice","orderList","length","map","item","Cart_CartList","key","product","imageUrl","final_total","react_router_dom","to","Cart_templateObject","green","white","orange"],"mappings":"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","file":"static/js/13.00553df5.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Flex } from 'rebass';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { SharedContext } from '../../contexts/SharedContext';\r\n\r\nconst CartList = ({ className, id, title, image, price, qty, total }) => {\r\n  const { deleteCartOrder } = useContext(SharedContext);\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <img src={image} alt='img' />\r\n      </div>\r\n      <div className='items'>\r\n        <div>{title}</div>\r\n        <div>{`kr ${price}`}</div>\r\n      </div>\r\n\r\n      <Flex flexDirection={['column', 'row']} alignItems={['center', '']}>\r\n        <div className='amount'>\r\n          <Flex justifyContent='flex-end'>{qty}</Flex>\r\n        </div>\r\n        <div className='total'>\r\n          <Flex justifyContent='flex-end'>{`kr ${total}`}</Flex>\r\n        </div>\r\n        <div\r\n          className='trash'\r\n          onClick={() => deleteCartOrder(id)}\r\n          onKeyDown={deleteCartOrder}\r\n          role='button'\r\n          tabIndex='0'\r\n        >\r\n          <FontAwesomeIcon icon={faTrash} />\r\n        </div>\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n\r\nCartList.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  price: PropTypes.string.isRequired,\r\n  qty: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nconst StyledCartList = styled(CartList)`\r\n  @media (min-width: 769px) {\r\n    width: 600px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    padding: 0 10px 0 10px;\r\n    width: 97vw;\r\n    .total {\r\n      margin-top: 5px;\r\n    }\r\n    .trash {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n\r\n  width: 600px;\r\n  height: 130px;\r\n  font-size: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 2px solid ${props => props.theme.colors.greenWhite};\r\n\r\n  img {\r\n    width: 110px;\r\n    height: 110px;\r\n  }\r\n\r\n  .items {\r\n    margin-left: 10px;\r\n    width: 250px;\r\n  }\r\n\r\n  .amount {\r\n    margin-left: 20px;\r\n    width: 20px;\r\n  }\r\n\r\n  .total {\r\n    width: 100px;\r\n  }\r\n  .trash {\r\n    margin-left: 20px;\r\n  }\r\n\r\n  .trash {\r\n    transition: 0.5s all;\r\n    &:hover {\r\n      cursor: pointer;\r\n      &:hover {\r\n        transform: scale(1.3);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nStyledCartList.displayName = 'CartList';\r\n\r\nexport default StyledCartList;\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport CartList from './CartList';\r\nimport { SharedContext } from '../../contexts/SharedContext';\r\n\r\nconst Cart = ({ className }) => {\r\n  const { totalPrice, orderList } = useContext(SharedContext);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className='left'>\r\n        <div className='yourcart'>Your cart</div>\r\n        {orderList.length === 0 && <div>Oops! Your cart is empty.</div>}\r\n\r\n        {orderList.map(item => (\r\n          <CartList\r\n            key={item.id}\r\n            id={item.id}\r\n            title={item.product.title}\r\n            image={item.product.imageUrl}\r\n            price={item.product.price}\r\n            total={item.final_total}\r\n            qty={item.qty}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className='right'>\r\n        <div className='summary'>Summary</div>\r\n        <div>\r\n          <div className='price'>\r\n            <div>price</div>\r\n            <div>{`kr ${totalPrice}`}</div>\r\n          </div>\r\n          <div className='shipment'>\r\n            <div>shipment</div>\r\n            <div>kr 0</div>\r\n          </div>\r\n          <div className='total'>\r\n            <div>Total</div>\r\n            <div>{`kr ${totalPrice}`}</div>\r\n          </div>\r\n        </div>\r\n        <div className='checkout'>\r\n          {orderList.length !== 0 && (\r\n            <Link to='/Sweet-for-happiness/checkout'>Proceed to checkout</Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n};\r\n\r\nconst StyledCart = styled(Cart)`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 769px) {\r\n    margin: 50px 0;\r\n    .left {\r\n      margin-right: 30px;\r\n      width: 600px;\r\n    }\r\n    .right {\r\n      color: ${props => props.theme.colors.greenWhite};\r\n      background-color: ${props => props.theme.colors.green};\r\n      .summary {\r\n        border-bottom: 1px solid ${props => props.theme.colors.greenWhite};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .left {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      .yourcart {\r\n        width: 95vw;\r\n        margin-bottom: 30px;\r\n      }\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n    .right {\r\n      color: ${props => props.theme.colors.green};\r\n      background-color: ${props => props.theme.colors.white};\r\n      .summary {\r\n        margin-top: 20px;\r\n        background-color: ${props => props.theme.colors.greenWhite};\r\n      }\r\n      .checkout {\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .yourcart {\r\n    height: 65px;\r\n    font-size: 24px;\r\n    background-color: ${props => props.theme.colors.greenWhite};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .right {\r\n    width: 300px;\r\n    height: 293px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .summary {\r\n      width: 100%;\r\n      height: 50px;\r\n      font-size: 24px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n    .price,\r\n    .shipment,\r\n    .total {\r\n      width: 280px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      line-height: 2.5;\r\n    }\r\n    .total {\r\n      font-size: 20px;\r\n    }\r\n\r\n    .checkout {\r\n      width: 100%;\r\n      height: 50px;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border-bottom: 3px solid ${props => props.theme.colors.orange};\r\n      font-size: 24px;\r\n      color: ${props => props.theme.colors.green};\r\n      background-color: ${props => props.theme.colors.orange};\r\n    }\r\n  }\r\n`;\r\n\r\nStyledCart.displayName = 'Cart';\r\n\r\nexport default StyledCart;\r\n"],"sourceRoot":""}